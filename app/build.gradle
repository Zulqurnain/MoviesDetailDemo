import groovy.json.JsonSlurper

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlinx-serialization'
apply plugin: 'dagger.hilt.android.plugin'


def appVersionCode = 1
def appVersionName = "1.0.1"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation" : "$projectDir/schemas".toString(),
//                        "dagger.gradle.incremental" : "true",
                        "room.incremental" : "true",
                ]
            }
        }
        applicationId "com.jutt.moviesdetaildemo"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode appVersionCode
        versionName appVersionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        resConfigs "en", "ur"

        buildConfigField("String", "APPLICATION_FILE_PROVIDER", 'APPLICATION_ID + ".FileProvider"')

        def mobileAppScheme = "catfactsdemo"
        buildConfigField("String", "MOBILE_APP_SCHEME", '"' + mobileAppScheme + '"')
        buildConfigField("String", "FLICKR_API_KEY", '"8a6803cdff36ba3bc2484a3a30b07377"')
        buildConfigField("String", "FLICKR_API_SECRET", '"174bba99fbd54c81"')
        buildConfigField("String", "APL", '"https://play.google.com/store/apps/details?id=' + applicationId + '"')
        manifestPlaceholders = [
                mobileAppScheme      : mobileAppScheme,
        ]
        testInstrumentationRunner "com.jutt.moviesdetaildemo.HiltTestRunner"
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            def scheme = "https"
            def host = "example.com"
            buildConfigField("String", "API_HOST_SCHEME", "\"${scheme}\"")
            buildConfigField("String", "BASE_URL", "\"${scheme}" + "://" + "${host}" + "/" + "\"")
            buildConfigField("String", "API_BASE_URL", "\"${scheme}" + "://" + "${host}" + "/" + "\"")
            manifestPlaceholders.put("host", host)
            manifestPlaceholders.put("usesCleartextTraffic", true)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            def scheme = "https"
            def host = "example.com"
            buildConfigField("String", "API_HOST_SCHEME", "\"${scheme}\"")
            buildConfigField("String", "BASE_URL", "\"${scheme}" + "://" + "${host}" + "/" + "\"")
            buildConfigField("String", "API_BASE_URL", "\"${scheme}" + "://" + "${host}" + "/" + "\"")
            manifestPlaceholders.put("host", host)
            manifestPlaceholders.put("usesCleartextTraffic", true)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
}

kapt {
    correctErrorTypes true
}

hilt {
    enableTransformForLocalTests = true
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation platform("com.google.firebase:firebase-bom:$rootProject.firebaseBomVersion")
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.cardview:cardview:$rootProject.cardViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-process:$rootProject.lifecycleProcessVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.multidex:multidex:$rootProject.multidexVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.vectordrawable:vectordrawable-animated:$rootProject.vectorDrawableVersion"
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    implementation "com.google.android.material:material:$rootProject.materialDesignVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.jakewharton.timber:timber:$rootProject.timber"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.0"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$rootProject.kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"
    implementation "pub.devrel:easypermissions:$rootProject.easyPermissions"
    implementation "androidx.work:work-runtime-ktx:$rootProject.workRuntimeVersion"
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation "androidx.paging:paging-runtime-ktx:$rootProject.pagingKtxRuntime"

    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpLoggingInterceptorVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$rootProject.daggerHiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.daggerHiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$rootProject.hiltLifeCycleVersion"
    kapt "androidx.hilt:hilt-compiler:$rootProject.hiltLifeCycleVersion"

    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:$rootProject.activityKtx"

    implementation "com.intuit.sdp:sdp-android:$rootProject.androidSDP"
    implementation "com.intuit.ssp:ssp-android:$rootProject.androidSSP"
    implementation "com.github.vipafattal:KotlinRecycler:$rootProject.kotlinRecycler"

//    implementation "com.xwray:groupie:$rootProject.groupie_version"
//    implementation "com.xwray:groupie-viewbinding:$rootProject.groupie_version"

    implementation 'com.blankj:utilcodex:1.30.5'

    debugImplementation "com.amitshekhar.android:debug-db:$rootProject.debugDBAndroid"

    implementation "io.coil-kt:coil:0.11.0"
    implementation "io.coil-kt:coil-svg:0.11.0"

    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:1.10.6"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1"
    testImplementation "com.google.truth:truth:1.0.1"
    testImplementation "org.mockito:mockito-core:2.21.0"


    androidTestImplementation "com.google.truth:truth:1.0.1"
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.2'
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.12.1"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'androidx.fragment:fragment-testing:1.3.1'
    androidTestImplementation 'androidx.test:core-ktx:1.3.0'
    androidTestImplementation 'org.mockito:mockito-core:2.19.0'

//    instrumentation test
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.28-alpha'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.28-alpha'

}
